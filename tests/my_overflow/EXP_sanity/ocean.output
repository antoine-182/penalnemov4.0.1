
    CNRS - NERC - Met OFFICE - MERCATOR-ocean - CMCC
                        NEMO team
             Ocean General Circulation Model
                 NEMO version 4.0  (2019) 

            ._      ._      ._      ._      ._    
        _.-._)`\_.-._)`\_.-._)`\_.-._)`\_.-._)`\_ 

            o         _,           _,             
             o      .' (        .-' /             
            o     _/..._'.    .'   /              
       (    o .-'`      ` '-./  _.'               
        )    ( o)           ;= <_         (       
       (      '-.,\\__ __.-;`\   '.        )      
        )  )       \) |`\ \)  '.   \      (   (   
       (  (           \_/       '-._\      )   )  
        )  ) jgs                     `    (   (   
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 


AAAAAAAA

    
 usr_def_nam  : read the user defined namelist (namusr_def) in namelist_cfg
 ~~~~~~~~~~~ 
    Namelist namusr_def : OVERFLOW test case
       type of vertical coordinate : 
          z-coordinate flag                     ln_zco =  F
          z-partial-step coordinate flag        ln_zps =  T
          s-coordinate flag                     ln_sco =  F
       horizontal resolution                    rn_dx  =    1000.0000000000000       meters
       vertical   resolution                    rn_dz  =    20.000000000000000       meters
       OVERFLOW domain = 200 km x 3 grid-points x 2000 m
          resulting global domain size :        jpiglo =          202
                                                jpjglo =            3
                                                jpkglo =          101
    
    Lateral boundary condition of the global domain
       OVERFLOW : closed basin                  jperio =            0
  key_ubs active
  key_bvp inactive
  key_w_bvp inactive
    Namelist namusr_def : Brinkman Penalisation Parameters
                                               rn_abp =    1.0000000000000000E-002
                                               nn_cnp =          100
                                               rn_fsp =    0.0000000000000000     
                                               nn_fsp =           12
                                            nn_bvpsmg =            3
    Namelist nammpp
       jpni and jpnj will be calculated automatically
       avoid use of mpi_allgather at the north fold  ln_nnogather =  T
 mpp_init:
 ~~~~~~~~ 

    ==> you use the best mpi decomposition

   Number of mpi processes:     1
   Number of ocean subdomains =     1
   Number of suppressed land subdomains =     0


 MPI Message Passing MPI - domain lay out over processors

    defines mpp subdomains
       jpni =            1
       jpnj =            1

       sum ilci(i,1) =          202  jpiglo =          202
       sum ilcj(1,j) =            3  jpjglo =            3

           ****************
           *              *   
         1 *  202  x  3   *   
           *          0   *        
           *              *   
           ****************
                   1             

    resulting internal parameters : 
       nproc  =            0
       nowe   =           -1    noea  =            -1
       nono   =           -1    noso  =            -1
       nbondi =            2
       nbondj =            2
       npolj  =            0
     l_Iperio =  F
     l_Jperio =  F
       nlci   =          202
       nlcj   =            3
       nimpp  =            1
       njmpp  =            1
       nreci  =            2
       nrecj  =            2
       nn_hls =            1

 mpp_init_ioipsl :   iloc  =          202           3
 ~~~~~~~~~~~~~~~     iabsf =            1           1
                     ihals =            0           0
                     ihale =            0           0

 nemo_ctl: Control prints
 ~~~~~~~~
    Namelist namctl
       run control (for debugging)     ln_ctl     =  F
        finer control over o/p sn_cfctl%l_config  =  T
                               sn_cfctl%l_runstat =  F
                               sn_cfctl%l_trcstat =  F
                               sn_cfctl%l_oceout  =  F
                               sn_cfctl%l_layout  =  F
                               sn_cfctl%l_mppout  =  F
                               sn_cfctl%l_mpptop  =  F
                               sn_cfctl%procmin   =            0
                               sn_cfctl%procmax   =      1000000
                               sn_cfctl%procincr  =            1
                               sn_cfctl%ptimincr  =            1
       level of print                  nn_print   =            0
       Start i indice for SUM control  nn_ictls   =            0
       End i indice for SUM control    nn_ictle   =            0
       Start j indice for SUM control  nn_jctls   =            0
       End j indice for SUM control    nn_jctle   =            0
       number of proc. following i     nn_isplt   =            1
       number of proc. following j     nn_jsplt   =            1
       timing by routine               ln_timing  =  F
       CFL diagnostics                 ln_diacfl  =  F

    Namelist namcfg
       read domain configuration file                ln_read_cfg      =  F
          filename to be read                           cn_domcfg     = domain_cfg
          keep closed seas in the domain (if exist)     ln_closea     =  F
       create a configuration definition file        ln_write_cfg     =  F
          filename to be written                        cn_domcfg_out = domain_cfg_out
       use file attribute if exists as i/p j-start   ln_use_jattr     =  F

 phy_cst : initialization of ocean parameters and constants
 ~~~~~~~
       mathematical constant                 rpi =    3.1415926535897931     
       day                                rday   =    86400.000000000000       s
       sideral year                       rsiyea =    31558149.010110732       s
       sideral day                        rsiday =    86164.099655911836       s
       omega                              omega  =    7.2921150830460618E-005  s^-1

       nb of months per year               raamo =    12.000000000000000       months
       nb of hours per day                 rjjhh =    24.000000000000000       hours
       nb of minutes per hour              rhhmm =    60.000000000000000       mn
       nb of seconds per minute            rmmss =    60.000000000000000       s

       earth radius                         ra   =    6371229.0000000000       m
       gravity                              grav =    9.8066499999999994       m/s^2

       freezing point of water              rt0  =    273.14999999999998       K

    reference density and heat capacity now defined in eosbn2.f90

       thermal conductivity of pure ice          =    2.0343960000000001       J/s/m/K
       thermal conductivity of snow is defined in a namelist 
       fresh ice specific heat                   =    2067.0000000000000       J/kg/K
       latent heat of fusion of fresh ice / snow =    334000.00000000000       J/kg
       latent heat of subl.  of fresh ice / snow =    2834000.0000000000       J/kg
       density of sea ice                        =    917.00000000000000       kg/m^3
       density of snow                           =    330.00000000000000       kg/m^3
       density of freshwater (in melt ponds)     =    1000.0000000000000       kg/m^3
       salinity of ice (for pisces)              =    6.0000000000000000       psu
       salinity of sea (for pisces and isf)      =    34.700000000000003       psu
       latent heat of evaporation (water)        =    2500000.0000000000       J/m^3
       von Karman constant                       =   0.40000000000000002     
       Stefan-Boltzmann constant                 =    5.6699999999999998E-008  J/s/m^2/K^4

       conversion: degre ==> radian          rad =    1.7453292519943295E-002

       smallest real computer value       rsmall =    1.1102230246251565E-016

 eos_init : equation of state
 ~~~~~~~~
    Namelist nameos : Chosen the Equation Of Seawater (EOS)
       TEOS-10 : rho=F(Conservative Temperature, Absolute  Salinity, depth)   ln_TEOS10 =  F
       EOS-80  : rho=F(Potential    Temperature, Practical Salinity, depth)   ln_EOS80  =  F
       S-EOS   : rho=F(Conservative Temperature, Absolute  Salinity, depth)   ln_SEOS   =  T

    ==>>>   use of simplified eos:    
               rhd(dT=T-10,dS=S-35,Z) = [-a0*(1+lambda1/2*dT+mu1*Z)*dT 
                                        + b0*(1+lambda2/2*dT+mu2*Z)*dS - nu*dT*dS] / rau0
               with the following coefficients :
                  thermal exp. coef.    rn_a0      =   0.20000000000000001     
                  saline  cont. coef.   rn_b0      =    0.0000000000000000     
                  cabbeling coef.       rn_lambda1 =    0.0000000000000000     
                  cabbeling coef.       rn_lambda2 =    0.0000000000000000     
                  thermobar. coef.      rn_mu1     =    0.0000000000000000     
                  thermobar. coef.      rn_mu2     =    0.0000000000000000     
                  2nd cabbel. coef.     rn_nu      =    0.0000000000000000     
               Caution: rn_beta0=0 incompatible with ddm parameterization 

    ==>>>   model uses Conservative Temperature
            Important: model must be initialized with CT and SA fields

    Associated physical constant
       volumic mass of reference           rau0  =    1026.0000000000000       kg/m^3
       1. / rau0                        r1_rau0  =    9.7465886939571145E-004  m^3/kg
       ocean specific heat                 rcp   =    3991.8679571196299       J/Kelvin
       rau0 * rcp                       rau0_rcp =    4095656.5240047402     
       1. / ( rau0 * rcp )           r1_rau0_rcp =    2.4416109948160356E-007

 wad_init : Wetting and drying initialization through namelist read
 ~~~~~~~~
    Namelist namwad
       Logical for Iter Lim wd option   ln_wd_il     =  F
       Logical for Dir. Lim wd option   ln_wd_dl     =  F
       Depth at which wet/drying starts rn_wdmin0    =   0.29999999999999999     
       Minimum wet depth on dried cells rn_wdmin1    =   0.20000000000000001     
       Tolerance of min wet depth       rn_wdmin2    =    1.0000000000000000E-004
       land elevation threshold         rn_wdld      =    2.5000000000000000     
       Max iteration for W/D limiter    nn_wdit      =           20
       T => baroclinic u,v=0 at dry pts: ln_wd_dl_bc =  F
       use a ramp for rwd limiter:  ln_wd_dl_rwd_rmp =  F
       cut off depth sbc for wd   rn_wd_sbcdep       =    5.0000000000000000     
       fraction to start sbc wgt rn_wd_sbcfra        =   0.99900000000000000     
       No configuration file so seting ssh_ref to zero  

 dom_init : domain initialization
 ~~~~~~~~
    Domain info
       dimension of model:
              Local domain      Global domain       Data domain 
               jpi     :     202   jpiglo  :     202
               jpj     :       3   jpjglo  :       3
               jpk     :     101   jpkglo  :     101
               jpij    :     606
       mpp local domain info (mpp):
               jpni    :            1    nn_hls  :            1
               jpnj    :            1    nn_hls  :            1
               jpnij   :            1
       lateral boundary of the Global domain : jperio  =            0
          (i.e. closed)
       Ocean model configuration used:
          cn_cfg = OVERFLOW   nn_cfg =         1000

 dom_glo : domain: global <<==>> local 
 ~~~~~~~ 
    global domain:   jpiglo =          202  jpjglo =            3  jpkglo =          101
    local  domain:   jpi    =          202  jpj    =            3  jpk    =          101

    conversion from local to global domain indices (and vise versa) done

 dom_nam : domain initialization through namelist read
 ~~~~~~~ 
    Namelist : namrun   ---   run parameters
       Assimilation cycle              nn_no           =            0
       experiment name for output      cn_exp          = OVF
       file prefix restart input       cn_ocerst_in    = restart
       restart input directory         cn_ocerst_indir = .
       file prefix restart output      cn_ocerst_out   = restart
       restart output directory        cn_ocerst_outdir= .
       restart logical                 ln_rstart       =  F
       start with forward time step    nn_euler        =            1
       control of time step            nn_rstctl       =            0
       number of the first time step   nn_it000        =            1
       number of the last time step    nn_itend        =         6120
       initial calendar date aammjj    nn_date0        =        10101
       initial time of day in hhmm     nn_time0        =            0
       leap year calendar (0/1)        nn_leapy        =            0
       initial state output            nn_istate       =            1
       frequency of restart file       nn_stock        =         6120
       mask land points                ln_mskland      =  F
       additional CF standard metadata ln_cfmeta       =  F
       overwrite an existing file      ln_clobber      =  T
       NetCDF chunksize (bytes)        nn_chunksz      =            0
       IS coupling at the restart step ln_iscpl        =  F
       READ restart for a single file using XIOS ln_xios_read = F
       Write restart using XIOS        nn_wxios   =            0

    ==>>>   Start from rest (ln_rstart=F)
            an Euler initial time step is used : nn_euler is forced to 0 

    ==>>>   The IOIPSL calendar is "noleap", i.e. no leap year

    Namelist : namdom   ---   space & time domain
       linear free surface (=T)                ln_linssh   =  T
       create mesh/mask file                   ln_meshmask =  T
       treshold to open the isf cavity         rn_isfhmin  =    1.0000000000000000       [m]
       ocean time step                         rn_rdt      =    10.000000000000000     
       asselin time filter parameter           rn_atfp     =   0.10000000000000001     
       online coarsening of dynamical fields   ln_crs      =  F

 dom_hgr : define the horizontal mesh from ithe following par_oce parameters 
 ~~~~~~~   
    namcfg : read (=T) or user defined (=F) configuration    ln_read_cfg  =  F

           User defined horizontal mesh (usr_def_hgr)

 usr_def_hgr : OVERFLOW configuration bassin
 ~~~~~~~~~~~   uniform grid spacing WITHOUT Coriolis force (f=0)
           Coriolis parameter have been set in usr_def_hgr routine
           u- & v-surfaces calculated as e1 e2 product

 dom_zgr : vertical coordinate
 ~~~~~~~
    linear free surface: the vertical mesh does not change in time

           User defined vertical mesh (usr_def_zgr)

 usr_def_zgr : OVERFLOW configuration (z(ps)- or s-coordinate closed box ocean without cavities)
 ~~~~~~~~~~~

     zgr_z1d : Reference vertical z-coordinates: uniform dz =    20.000000000000000     
     ~~~~~~~

               Reference 1D z-coordinate depth and scale factors:
          level  gdept_1d  gdepw_1d  e3t_1d   e3w_1d  
             1    10.00     0.00    20.00    20.00
             2    30.00    20.00    20.00    20.00
             3    50.00    40.00    20.00    20.00
             4    70.00    60.00    20.00    20.00
             5    90.00    80.00    20.00    20.00
             6   110.00   100.00    20.00    20.00
             7   130.00   120.00    20.00    20.00
             8   150.00   140.00    20.00    20.00
             9   170.00   160.00    20.00    20.00
            10   190.00   180.00    20.00    20.00
            11   210.00   200.00    20.00    20.00
            12   230.00   220.00    20.00    20.00
            13   250.00   240.00    20.00    20.00
            14   270.00   260.00    20.00    20.00
            15   290.00   280.00    20.00    20.00
            16   310.00   300.00    20.00    20.00
            17   330.00   320.00    20.00    20.00
            18   350.00   340.00    20.00    20.00
            19   370.00   360.00    20.00    20.00
            20   390.00   380.00    20.00    20.00
            21   410.00   400.00    20.00    20.00
            22   430.00   420.00    20.00    20.00
            23   450.00   440.00    20.00    20.00
            24   470.00   460.00    20.00    20.00
            25   490.00   480.00    20.00    20.00
            26   510.00   500.00    20.00    20.00
            27   530.00   520.00    20.00    20.00
            28   550.00   540.00    20.00    20.00
            29   570.00   560.00    20.00    20.00
            30   590.00   580.00    20.00    20.00
            31   610.00   600.00    20.00    20.00
            32   630.00   620.00    20.00    20.00
            33   650.00   640.00    20.00    20.00
            34   670.00   660.00    20.00    20.00
            35   690.00   680.00    20.00    20.00
            36   710.00   700.00    20.00    20.00
            37   730.00   720.00    20.00    20.00
            38   750.00   740.00    20.00    20.00
            39   770.00   760.00    20.00    20.00
            40   790.00   780.00    20.00    20.00
            41   810.00   800.00    20.00    20.00
            42   830.00   820.00    20.00    20.00
            43   850.00   840.00    20.00    20.00
            44   870.00   860.00    20.00    20.00
            45   890.00   880.00    20.00    20.00
            46   910.00   900.00    20.00    20.00
            47   930.00   920.00    20.00    20.00
            48   950.00   940.00    20.00    20.00
            49   970.00   960.00    20.00    20.00
            50   990.00   980.00    20.00    20.00
            51  1010.00  1000.00    20.00    20.00
            52  1030.00  1020.00    20.00    20.00
            53  1050.00  1040.00    20.00    20.00
            54  1070.00  1060.00    20.00    20.00
            55  1090.00  1080.00    20.00    20.00
            56  1110.00  1100.00    20.00    20.00
            57  1130.00  1120.00    20.00    20.00
            58  1150.00  1140.00    20.00    20.00
            59  1170.00  1160.00    20.00    20.00
            60  1190.00  1180.00    20.00    20.00
            61  1210.00  1200.00    20.00    20.00
            62  1230.00  1220.00    20.00    20.00
            63  1250.00  1240.00    20.00    20.00
            64  1270.00  1260.00    20.00    20.00
            65  1290.00  1280.00    20.00    20.00
            66  1310.00  1300.00    20.00    20.00
            67  1330.00  1320.00    20.00    20.00
            68  1350.00  1340.00    20.00    20.00
            69  1370.00  1360.00    20.00    20.00
            70  1390.00  1380.00    20.00    20.00
            71  1410.00  1400.00    20.00    20.00
            72  1430.00  1420.00    20.00    20.00
            73  1450.00  1440.00    20.00    20.00
            74  1470.00  1460.00    20.00    20.00
            75  1490.00  1480.00    20.00    20.00
            76  1510.00  1500.00    20.00    20.00
            77  1530.00  1520.00    20.00    20.00
            78  1550.00  1540.00    20.00    20.00
            79  1570.00  1560.00    20.00    20.00
            80  1590.00  1580.00    20.00    20.00
            81  1610.00  1600.00    20.00    20.00
            82  1630.00  1620.00    20.00    20.00
            83  1650.00  1640.00    20.00    20.00
            84  1670.00  1660.00    20.00    20.00
            85  1690.00  1680.00    20.00    20.00
            86  1710.00  1700.00    20.00    20.00
            87  1730.00  1720.00    20.00    20.00
            88  1750.00  1740.00    20.00    20.00
            89  1770.00  1760.00    20.00    20.00
            90  1790.00  1780.00    20.00    20.00
            91  1810.00  1800.00    20.00    20.00
            92  1830.00  1820.00    20.00    20.00
            93  1850.00  1840.00    20.00    20.00
            94  1870.00  1860.00    20.00    20.00
            95  1890.00  1880.00    20.00    20.00
            96  1910.00  1900.00    20.00    20.00
            97  1930.00  1920.00    20.00    20.00
            98  1950.00  1940.00    20.00    20.00
            99  1970.00  1960.00    20.00    20.00
           100  1990.00  1980.00    20.00    20.00
           101  2010.00  2000.00    20.00    20.00
    minimum thickness of the partial cells = 10 % of e3 =    2.0000000000000000     

 clo_bat : suppression of closed seas
 ~~~~~~~
 No domain_cfg file => no suppression of closed seas.

    Type of vertical coordinate (read in domain_cfg file or set in userdef_nam) :
       z-coordinate - full steps      ln_zco    =  F
       z-coordinate - partial steps   ln_zps    =  T
       s- or hybrid z-s-coordinate    ln_sco    =  F
       ice shelf cavities             ln_isfcav =  F

     zgr_top_bot : ocean top and bottom k-index of T-, U-, V- and W-levels 
     ~~~~~~~~~~~

 dommsk : ocean mask 
 ~~~~~~
    Namelist namlbc
       lateral momentum boundary cond.    rn_shlat  =    0.0000000000000000     
       consistency with analytical form   ln_vorlat =  F

    ==>>>   ocean lateral  free-slip

 usr_def_fmask : NO alteration of fmask in specific straits 
 ~~~~~~~~~~~~~

 dom_wri : create NetCDF mesh and mask information file(s)
 ~~~~~~~
                     iom_nf90_open ~~~ create new file: mesh_mask.nc in WRITE mode
                    ---> mesh_mask.nc OK
           iom_nf90_rp0123d, file: mesh_mask.nc, var: jpiglo define dimension variables done
           iom_nf90_rp0123d, file: mesh_mask.nc, var: jpiglo defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: jpiglo written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: jpjglo defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: jpjglo written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: jpkglo defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: jpkglo written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: jperio defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: jperio written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ln_zco defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ln_zco written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ln_zps defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ln_zps written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ln_sco defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ln_sco written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ln_isfcav defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ln_isfcav written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: tmask defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: tmask write dimension variables done
           iom_nf90_rp0123d, file: mesh_mask.nc, var: tmask written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: umask defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: umask written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: vmask defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: vmask written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: fmask defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: fmask written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: tmaskutil defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: tmaskutil written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: umaskutil defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: umaskutil written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: vmaskutil defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: vmaskutil written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: glamt defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: glamt written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: glamu defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: glamu written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: glamv defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: glamv written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: glamf defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: glamf written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gphit defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gphit written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gphiu defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gphiu written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gphiv defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gphiv written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gphif defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gphif written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e1t defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e1t written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e1u defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e1u written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e1v defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e1v written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e1f defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e1f written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e2t defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e2t written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e2u defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e2u written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e2v defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e2v written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e2f defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e2f written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ff_f defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ff_f written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ff_t defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: ff_t written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: mbathy defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: mbathy written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: misf defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: misf written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: isfdraft defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: isfdraft written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3t_1d defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3t_1d written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3w_1d defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3w_1d written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3t_0 defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3t_0 written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3u_0 defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3u_0 written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3v_0 defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3v_0 written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3f_0 defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3f_0 written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3w_0 defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3w_0 written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3uw_0 defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3uw_0 written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3vw_0 defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: e3vw_0 written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gdept_1d defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gdept_1d written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gdepw_1d defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gdepw_1d written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gdept_0 defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gdept_0 written ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gdepw_0 defined ok
           iom_nf90_rp0123d, file: mesh_mask.nc, var: gdepw_0 written ok
                     iom_close ~~~ close file: mesh_mask.nc ok

 dom_ctl : extrema of the masked scale factors
 ~~~~~~~
              e1t maxi:    1000.00 at i =     2 j=     2
              e1t mini:    1000.00 at i =     2 j=     2
              e2t maxi:    1000.00 at i =     2 j=     2
              e2t mini:    1000.00 at i =     2 j=     2

 dom_init :   ==>>>   END of domain initialization
 ~~~~~~~~


 istate_init : Initialization of the dynamics and tracers
 ~~~~~~~~~~~

 dta_tsd_init : Temperature & Salinity data 
 ~~~~~~~~~~~~ 
    Namelist namtsd
       Initialisation of ocean T & S with T &S input data   ln_tsd_init =  F
       damping of ocean T & S toward T &S input data        ln_tsd_dmp  =  F


    ===>>   T & S data not used
  *** Info used values : 
    date ndastp                                      :        10100
    number of elapsed days since the begining of run :    0.0000000000000000     
    nn_time0                                         :            0

 =======>> 1/2 time step before the start of the run DATE Y/M/D =      0/12/31  nsec_day:   86395  nsec_week:  431995                     nsec_month: 2678395  nsec_year:31535995
======>> time-step =       1      New day, DATE Y/M/D = 0001/01/01      nday_year = 001
         nsec_year =        5   nsec_month =       5   nsec_day =     5
   nsec_week =   432005

 usr_def_istate : OVERFLOW configuration, analytical definition of initial state
 ~~~~~~~~~~~~~~   Ocean at rest, with a constant salinity (not used as rho=F(T) 
                  and a vertical density front with a 2 kg/m3 difference located at glam=20km
                  (i.e. a temperature difference of 10 degrees with rn_a0 = 0.2

 tide_init : tidal components not used (ln_tide = F)
 ~~~~~~~~~ 

 sbc_init : surface boundary condition setting
 ~~~~~~~~ 
    Namelist namsbc (partly overwritten with CPP key setting)
       frequency update of sbc (and ice)             nn_fsbc       =            1
       Type of air-sea fluxes : 
          user defined formulation                   ln_usr        =  T
          flux         formulation                   ln_flx        =  F
          bulk         formulation                   ln_blk        =  F
       Type of coupling (Ocean/Ice/Atmosphere) : 
          ocean-atmosphere coupled formulation       ln_cpl        =  F
          mixed forced-coupled     formulation       ln_mixcpl     =  F
          OASIS coupling (with atm or sas)           lk_oasis      =  F
          components of your executable              nn_components =            0
       Sea-ice : 
          ice management in the sbc (=0/1/2/3)       nn_ice        =            0
          ice embedded into ocean                    ln_ice_embd   =  F
       Misc. options of sbc : 
          Light penetration in temperature Eq.       ln_traqsr     =  F
             daily mean to diurnal cycle qsr            ln_dm2dc   =  F
          Sea Surface Restoring on SST and/or SSS    ln_ssr        =  F
          FreshWater Budget control  (=0/1/2)        nn_fwb        =            0
          Patm gradient added in ocean & ice Eqs.    ln_apr_dyn    =  F
          runoff / runoff mouths                     ln_rnf        =  F
          iceshelf formulation                       ln_isf        =  F
          nb of iterations if land-sea-mask applied  nn_lsm        =            0
          surface wave                               ln_wave       =  F
                Stokes drift corr. to vert. velocity ln_sdw        =  F
                   vertical parametrization          nn_sdrift     =            0
                wave modified ocean stress           ln_tauwoc     =  F
                wave modified ocean stress component ln_tauw       =  F
                Stokes coriolis term                 ln_stcor      =  F
                neutral drag coefficient (CORE,NCAR) ln_cdgw       =  F

    ==>>>   NEMO configured as a single executable (i.e. including both OPA and Surface module)

    ==>>>   user defined forcing formulation

 sbc_ssm_init : sea surface mean fields, nn_fsbc=1 : instantaneous values
 ~~~~~~~~~~~ 
    default initialisation of ss._m arrays

 bdy_init : open boundaries not used (ln_bdy = F)
 ~~~~~~~~

 zdf_phy_init: ocean vertical physics
 ~~~~~~~~~~~~
    Namelist namzdf : set vertical mixing mixing parameters
       adaptive-implicit vertical advection
          Courant number targeted application   ln_zad_Aimp =  F
       vertical closure scheme
          constant vertical mixing coefficient    ln_zdfcst =  T
          Richardson number dependent closure     ln_zdfric =  F
          Turbulent Kinetic Energy closure (TKE)  ln_zdftke =  F
          Generic Length Scale closure (GLS)      ln_zdfgls =  F
          OSMOSIS-OBL closure (OSM)               ln_zdfosm =  F
       convection: 
          enhanced vertical diffusion             ln_zdfevd =  F
             applied on momentum (=1/0)             nn_evdm =            0
             vertical coefficient for evd           rn_evd  =    100.00000000000000     
          non-penetrative convection (npc)        ln_zdfnpc =  F
             npc call  frequency                    nn_npc  =            1
             npc print frequency                    nn_npcp =          365
       double diffusive mixing                    ln_zdfddm =  F
          maximum avs for dd mixing                 rn_avts =    1.0000000000000000E-004
          heat/salt buoyancy flux ratio             rn_hsbfr=    1.6000000000000001     
       gravity wave-induced mixing
          surface  wave (Qiao et al 2010)         ln_zdfswm =  F
          internal wave (de Lavergne et al 2017)  ln_zdfiwm =  F
       coefficients : 
          vertical eddy viscosity                 rn_avm0   =    1.0000000000000000E-004
          vertical eddy diffusivity               rn_avt0   =    0.0000000000000000     
          constant background or profile          nn_avb    =            0
          horizontal variation for avtb           nn_havtb  =            0

    ==>>>   convection: no specific scheme used

    ==>>>   No  double diffusive mixing: avs = avt

 zdf_drg_init : top and/or bottom drag setting
 ~~~~~~~~~~~~
    Namelist namdrg : top/bottom friction choices
       free-slip       : Cd = 0                  ln_OFF      =  T
       linear  drag    : Cd = Cd0                ln_lin      =  F
       non-linear  drag: Cd = Cd0_nl |U|         ln_non_lin  =  F
       logarithmic drag: Cd = vkarmn/log(z/z0)   ln_loglayer =  F
       implicit friction                         ln_drgimp   =  T

    Namelist namdrg_bot : set BOTTOM friction parameters
       drag coefficient                        rn_Cd0   =    1.0000000000000000E-003
       characteristic velocity (linear case)   rn_Uc0   =   0.40000000000000002       m/s
       non-linear drag maximum                 rn_Cdmax =   0.10000000000000001     
       background kinetic energy  (n-l case)   rn_ke0   =    2.5000000000000001E-003
       bottom roughness           (n-l case)   rn_z0    =    3.0000000000000001E-003
       set a regional boost of Cd0             ln_boost =  F
          associated boost factor              rn_boost =    50.000000000000000     

    ==>>>   BOTTOM free-slip, friction set to zero

 ldf_tra_init : lateral tracer diffusion
 ~~~~~~~~~~~~ 
    Namelist : namtra_ldf --- lateral mixing parameters (type, direction, coefficients)
       type :
          no explicit diffusion                   ln_traldf_OFF   =  T
          laplacian operator                      ln_traldf_lap   =  F
          bilaplacian operator                    ln_traldf_blp   =  F
       direction of action :
          iso-level                               ln_traldf_lev   =  F
          horizontal (geopotential)               ln_traldf_hor   =  F
          iso-neutral Madec operator              ln_traldf_iso   =  F
          iso-neutral triad operator              ln_traldf_triad =  F
             use the Method of Stab. Correction   ln_traldf_msc   =  F
             maximum isoppycnal slope             rn_slpmax       =    1.0000000000000000E-002
             pure lateral mixing in ML            ln_triad_iso    =  F
             switching triad or not               rn_sw_triad     =    1.0000000000000000     
             lateral mixing on bottom             ln_botmix_triad =  F
       coefficients :
          type of time-space variation            nn_aht_ijk_t    =            0
             lateral diffusive velocity (if cst)  rn_Ud           =    1.0000000000000000E-002  m/s
             lateral diffusive length   (if cst)  rn_Ld           =    200000.00000000000       m

    ==>>>   NO lateral diffusion

    ==>>>   No diffusive operator selected. ahtu and ahtv are not allocated

 ldf_eiv_init : eddy induced velocity parametrization
 ~~~~~~~~~~~~ 
    Namelist namtra_eiv : 
       Eddy Induced Velocity (eiv) param.         ln_ldfeiv     =  F
       eiv streamfunction & velocity diag.        ln_ldfeiv_dia =  F
       coefficients :
          type of time-space variation            nn_aei_ijk_t  =            0
          lateral diffusive velocity (if cst)     rn_Ue         =    2.0000000000000000E-002  m/s
          lateral diffusive length   (if cst)     rn_Le         =    200000.00000000000       m

    ==>>>   eddy induced velocity param is NOT used

 ldf_dyn : lateral momentum physics
 ~~~~~~~
    Namelist namdyn_ldf : set lateral mixing parameters
       type :
          no explicit diffusion                ln_dynldf_OFF =  T
          laplacian operator                   ln_dynldf_lap =  F
          bilaplacian operator                 ln_dynldf_blp =  F
       direction of action :
          iso-level                            ln_dynldf_lev =  T
          horizontal (geopotential)            ln_dynldf_hor =  F
          iso-neutral                          ln_dynldf_iso =  F
       coefficients :
          type of time-space variation         nn_ahm_ijk_t  =            0
          lateral viscous velocity  (if cst)      rn_Uv      =    2.0000000000000000       m/s
          lateral viscous length    (if cst)      rn_Lv      =    1000.0000000000000       m
          background viscosity (iso-lap case)     rn_ahm_b   =    0.0000000000000000       m2/s
       Smagorinsky settings (nn_ahm_ijk_t  = 32) :
          Smagorinsky coefficient              rn_csmc       =    3.5000000000000000     
          factor multiplier for eddy visc.
             lower limit (default 1.0)         rn_minfac    =    1.0000000000000000     
             upper limit (default 1.0)         rn_maxfac    =    1.0000000000000000     

    ==>>>   NO lateral viscosity

    ==>>>   No viscous operator selected. ahmt and ahmf are not allocated

 tra_bbc : Bottom Boundary Condition (bbc), apply a Geothermal heating
 ~~~~~~~   
    Namelist nambbc : set bbc parameters
       Apply a geothermal heating at ocean bottom   ln_trabbc     =  F
       type of geothermal flux                      nn_geoflx     =            2
       Constant geothermal flux value               rn_geoflx_cst =    8.6400000000000005E-002

    ==>>>   no geothermal heat flux

 tra_bbl_init : bottom boundary layer initialisation
 ~~~~~~~~~~~~
        Namelist nambbl : set bbl parameters
           bottom boundary layer flag          ln_trabbl  =  F

 tra_dmp_init : T and S newtonian relaxation
 ~~~~~~~~~~~~
    Namelist namtra_dmp : set relaxation parameters
       Apply relaxation   or not       ln_tradmp   =  F
          mixed layer damping option      nn_zdmp  =            0
          Damping file name               cn_resto = resto.nc                                                                                                                                                                                                


 tra_adv_init : choice/control of the tracer advection scheme
 ~~~~~~~~~~~~
    Namelist namtra_adv : chose a advection scheme for tracers
       No advection on T & S                     ln_traadv_OFF =  F
       centered scheme                           ln_traadv_cen =  F
             horizontal 2nd/4th order               nn_cen_h   =            3
             vertical   2nd/4th order               nn_cen_v   =            3
       Flux Corrected Transport scheme           ln_traadv_fct =  T
             horizontal 2nd/4th order               nn_fct_h   =            3
             vertical   2nd/4th order               nn_fct_v   =            3
       MUSCL scheme                              ln_traadv_mus =  F
             + upstream scheme near river mouths    ln_mus_ups =  F
       UBS scheme                                ln_traadv_ubs =  F
             vertical   2nd/4th order               nn_ubs_v   =            2
       QUICKEST scheme                           ln_traadv_qck =  F

    ==>>>   FCT      scheme is used. Horizontal order:            3  Vertical   order:            3

 tra_mle_init : mixed layer eddy (MLE) advection acting on tracers
 ~~~~~~~~~~~~~
    Namelist namtra_mle : mixed layer eddy advection applied on tracers
       use mixed layer eddy (MLE, i.e. Fox-Kemper param) (T/F)      ln_mle       =  F
          MLE type: =0 standard Fox-Kemper ; =1 new formulation        nn_mle    =            1
          magnitude of the MLE (typical value: 0.06 to 0.08)           rn_ce     =    5.9999999999999998E-002
          scale of ML front (ML radius of deformation) (rn_mle=0)      rn_lf     =    5000.0000000000000      m
          maximum time scale of MLE                    (rn_mle=0)      rn_time   =    172800.00000000000      s
          reference latitude (degrees) of MLE coef.    (rn_mle=1)      rn_lat    =    20.000000000000000      deg
          space interp. of MLD at u-(v-)pts (0=min,1=averaged,2=max)   nn_mld_uv =            0
          =1 no MLE in case of convection ; =0 always MLE              nn_conv   =            0
          Density difference used to define ML for FK              rn_rho_c_mle  =    1.0000000000000000E-002

    ==>>>   Mixed Layer Eddy parametrisation NOT used

 tra_ldf_init : lateral tracer diffusive operator
 ~~~~~~~~~~~~
    Namelist namtra_ldf: already read in ldftra module
       see ldf_tra_init report for lateral mixing parameters

    ==>>>   NO lateral diffusion

 dyn_adv_init : choice/control of the momentum advection scheme
 ~~~~~~~~~~~~
    Namelist namdyn_adv : chose a advection formulation & scheme for momentum
       linear dynamics : no momentum advection          ln_dynadv_OFF  =  F
       Vector form: 2nd order centered scheme           ln_dynadv_vec  =  F
          with Hollingsworth scheme (=1) or not (=0)       nn_dynkeg   =            0
       flux form: 2nd order centred scheme              ln_dynadv_cen2 =  F
                  3rd order UBS scheme                  ln_dynadv_ubs  =  T

    ==>>>   flux form   : UBS       scheme is used

 dyn_vor_init : vorticity term : read namelist and control the consistency
 ~~~~~~~~~~~~
    Namelist namdyn_vor : choice of the vorticity term scheme
       enstrophy conserving scheme                    ln_dynvor_ens =  T
       f-point energy conserving scheme               ln_dynvor_ene =  F
       t-point energy conserving scheme               ln_dynvor_enT =  F
       energy conserving scheme  (een using e3t)      ln_dynvor_eeT =  F
       enstrophy and energy conserving scheme         ln_dynvor_een =  F
          e3f = averaging /4 (=0) or /sum(tmask) (=1)    nn_een_e3f =            0
       mixed enstrophy/energy conserving scheme       ln_dynvor_mix =  F
       masked (=T) or unmasked(=F) vorticity          ln_dynvor_msk =  F

       change fmask value in the angles (T)           ln_vorlat =  F

    ==>>>   flux form dynamics : total vorticity = Coriolis + metric term

    ==>>>   enstrophy conserving scheme (ENS)

 dyn_ldf_init : Choice of the lateral diffusive operator on dynamics
 ~~~~~~~~~~~~
    Namelist namdyn_ldf: already read in ldfdyn module
       see ldf_dyn_init report for lateral mixing parameters

    ==>>>   NO lateral viscosity

 dyn_hpg_init : hydrostatic pressure gradient initialisation
 ~~~~~~~~~~~~
    Namelist namdyn_hpg : choice of hpg scheme
       z-coord. - full steps                             ln_hpg_zco    =  T
       z-coord. - partial steps (interpolation)          ln_hpg_zps    =  F
       s-coord. (standard jacobian formulation)          ln_hpg_sco    =  F
       s-coord. (standard jacobian formulation) for isf  ln_hpg_isf    =  F
       s-coord. (Density Jacobian: Cubic polynomial)     ln_hpg_djc    =  F
       s-coord. (Pressure Jacobian: Cubic polynomial)    ln_hpg_prj    =  F

    ==>>>   z-coord. - full steps 


 dyn_spg_init : choice of the surface pressure gradient scheme
 ~~~~~~~~~~~~
    Namelist : namdyn_spg                    
       Explicit free surface                  ln_dynspg_exp =  F
       Free surface with time splitting       ln_dynspg_ts  =  T

    ==>>>   free surface with time splitting scheme

 dyn_spg_ts_init : split-explicit free surface
 ~~~~~~~~~~~~~~~
      ln_ts_auto =.true. Automatically set nn_baro 
      Max. courant number allowed:   0.80000000000000004     
      ln_bt_av =.true.  ==> Time averaging over nn_baro time steps is on 
      ln_bt_fw=.true.  => Forward integration of barotropic variables 
      Time filter choice, nn_bt_flt:            1
            Boxcar: width = nn_baro
  
      nn_baro =            3
      Barotropic time step [s] is :   3.3333333333333335     
      Maximum Courant number is   :  0.66019020828175801     
      Time diffusion parameter rn_bt_alpha:    0.0000000000000000     

    ==>>>   start from rest: set barotropic values to 0

 icb_nam : iceberg initialization through namberg namelist read
 ~~~~~~~~ 

    ==>>>   No icebergs used

 sto_par_init : NO use of stochastic parameterization
 ~~~~~~~~~~~~

 flo_stp : call floats routine 
 ~~~~~~~

          Namelist floats :
             Activate floats or not                   ln_floats    =  F
                number of floats                      jpnfl        =            1
                number of new floats                  jpnflnewflo  =            0
                restart                               ln_rstflo    =  F
                frequency of float output file        nn_writefl   =           75
                frequency of float restart file       nn_stockfl   =         5475
                Argo type floats                      ln_argo      =  F
                Computation of T trajectories         ln_flork4    =  F
                Use of ariane convention              ln_ariane    =  T
                ascii output (T) or netcdf output (F) ln_flo_ascii =  T

 dia_ptr_init : poleward transport and msf initialization
 ~~~~~~~~~~~~
    Namelist namptr : set ptr parameters
       Poleward heat & salt transport (T) or not (F)      ln_diaptr  =  F
       Global (F) or glo/Atl/Pac/Ind/Indo-Pac basins      ln_subbas  =  F
  
 diadct_init: compute transports through sections 
 ~~~~~~~~~~~~~~~~~~~~~
        Calculate transport thru sections: ln_diadct =  F
        Frequency of computation:          nn_dct    =           15
        Frequency of write:                nn_dctwri =           15
        Debug section number:          112

 dia_hsb_init : heat and salt budgets diagnostics
 ~~~~~~~~~~~~ 
    Namelist  namhsb :
       check the heat and salt budgets (T) or not (F)       ln_diahsb =  F

 trd_init : Momentum/Tracers trends
 ~~~~~~~~
    Namelist namtrd : set trends parameters
       global domain averaged dyn & tra trends   ln_glo_trd  =  F
       U & V trends: 3D output                   ln_dyn_trd  =  F
       U & V trends: Mixed Layer averaged        ln_dyn_mxl  =  F
       T & S trends: 3D output                   ln_tra_trd  =  F
       T & S trends: Mixed Layer averaged        ln_tra_mxl  =  F
       Kinetic   Energy trends                   ln_KE_trd   =  F
       Potential Energy trends                   ln_PE_trd   =  F
       Barotropic vorticity trends               ln_vor_trd  =  F
       frequency of trends diagnostics (glo)     nn_trd      =          180

 dia_obs_init : NO Observation diagnostic used
 ~~~~~~~~~~~~

 dia_tmb_init : Output Top, Middle, Bottom Diagnostics
 ~~~~~~~~~~~~
    Namelist nam_diatmb : set tmb outputs 
       Switch for TMB diagnostics (T) or not (F)  ln_diatmb  =  F

 dia_25h_init : Output 25 hour mean diagnostics
 ~~~~~~~~~~~~
    Namelist nam_dia25h : set 25h outputs 
       Switch for 25h diagnostics (T) or not (F)  ln_dia25h  =  F

 dia_harm_init: Tidal harmonic analysis initialization
 ~~~~~~~ 
 Tidal diagnostics =  F
    First time step used for analysis:         nit000_han=            1
    Last  time step used for analysis:         nitend_han=           75
    Time step frequency for harmonic analysis: nstep_han =           15

AAAAAAAA


AAAAAAAA

  usr_sbc : OVERFLOW case: NO surface forcing
  ~~~~~~~~~~~   utau = vtau = taum = wndm = qns = qsr = emp = sfx = 0
           nit000-1 surface forcing fields set to nit000

 zdf_mxl : mixed layer depth
 ~~~~~~~ 

 ssh_nxt : after sea surface height
 ~~~~~~~ 

 div_hor : horizontal velocity divergence 
 ~~~~~~~   

 wzv : now vertical velocity 
 ~~~~~ 

 dyn_adv_ubs : UBS flux form momentum advection
 ~~~~~~~~~~~

 dyn:vor_ens : vorticity term: enstrophy conserving scheme
 ~~~~~~~~~~~

 dyn:hpg_zco : hydrostatic pressure gradient trend
 ~~~~~~~~~~~   z-coordinate case 

 dyn_spg_ts : surface pressure gradient trend
 ~~~~~~~~~~   free surface with time splitting


 div_hor : horizontal velocity divergence 
 ~~~~~~~   

 dyn_zdf_imp : vertical momentum diffusion implicit operator
 ~~~~~~~~~~~ 

 wzv : now vertical velocity 
 ~~~~~ 

 dia_wri_state : single instantaneous ocean state
 ~~~~~~~~~~~~~   and forcing fields file created 
                 and named :output.init...nc
                     iom_nf90_open ~~~ create new file: output.init.nc in WRITE mode
                    ---> output.init.nc OK
           iom_nf90_rp0123d, file: output.init.nc, var: votemper define dimension variables done
           iom_nf90_rp0123d, file: output.init.nc, var: votemper defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: votemper write dimension variables done
           iom_nf90_rp0123d, file: output.init.nc, var: votemper written ok
           iom_nf90_rp0123d, file: output.init.nc, var: vosaline defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: vosaline written ok
           iom_nf90_rp0123d, file: output.init.nc, var: sossheig defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: sossheig written ok
           iom_nf90_rp0123d, file: output.init.nc, var: vozocrtx defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: vozocrtx written ok
           iom_nf90_rp0123d, file: output.init.nc, var: vomecrty defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: vomecrty written ok
           iom_nf90_rp0123d, file: output.init.nc, var: vovecrtz defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: vovecrtz written ok
           iom_nf90_rp0123d, file: output.init.nc, var: sowaflup defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: sowaflup written ok
           iom_nf90_rp0123d, file: output.init.nc, var: sohefldo defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: sohefldo written ok
           iom_nf90_rp0123d, file: output.init.nc, var: soshfldo defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: soshfldo written ok
           iom_nf90_rp0123d, file: output.init.nc, var: soicecov defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: soicecov written ok
           iom_nf90_rp0123d, file: output.init.nc, var: sozotaux defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: sozotaux written ok
           iom_nf90_rp0123d, file: output.init.nc, var: sometauy defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: sometauy written ok
           iom_nf90_rp0123d, file: output.init.nc, var: utran defined ok
           iom_nf90_rp0123d, file: output.init.nc, var: utran written ok
                     iom_close ~~~ close file: output.init.nc ok

 tra_sbc : TRAcer Surface Boundary Condition
 ~~~~~~~ 

 tra_adv_fct : FCT advection scheme on TRA
 ~~~~~~~~~~~

 tra_zdf : implicit vertical mixing on T & S
 ~~~~~~~ 

 tra_nxt : achieve the time stepping by Asselin filter and array swap
 ~~~~~~~

 dyn_nxt : time stepping
 ~~~~~~~

 ssh_swp : Asselin time filter and swap of sea surface height
 ~~~~~~~ 

 stp_ctl : time-stepping control
 ~~~~~~~
      file   : time.step open ok
      unit   =           21
      status = REPLACE
      form   = FORMATTED
      access = SEQUENTIAL


              open ocean restart NetCDF file: ./OVF_00006120_restart
              kt = nitrst - 1 =         6119
                     iom_nf90_open ~~~ create new file: ./OVF_00006120_restart.nc in WRITE mode
                    ---> ./OVF_00006120_restart.nc OK
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: kt define dimension variables done
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: kt defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: ndastp defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: adatrj defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: ntime defined ok

 sbc : ocean surface forcing fields written in ocean restart file at it=         6119  date=        10101
 ~~~~
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: utau_b defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vtau_b defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: qns_b defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: emp_b defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sfx_b defined ok
 ---- ts_rst ----
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: ub2_b defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vb2_b defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: un_bf defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vn_bf defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sbc_hc_b defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sbc_sc_b defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: rdt defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: ub defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vb defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: tb defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sb defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sshb defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: un defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vn defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: tn defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sn defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sshn defined ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: rhop defined ok

 rst_write : write oce restart file  kt =        6120
 ~~~~~~~
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: kt written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: ndastp written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: adatrj written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: ntime written ok

 sbc : ocean surface forcing fields written in ocean restart file at it=         6120  date=        10101
 ~~~~
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: utau_b write dimension variables done
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: utau_b written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vtau_b written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: qns_b written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: emp_b written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sfx_b written ok
 ---- ts_rst ----
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: ub2_b written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vb2_b written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: un_bf written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vn_bf written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sbc_hc_b written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sbc_sc_b written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: rdt written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: ub written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vb written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: tb written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sb written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sshb written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: un written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: vn written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: tn written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sn written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: sshn written ok
           iom_nf90_rp0123d, file: ./OVF_00006120_restart.nc, var: rhop written ok
                     iom_close ~~~ close file: ./OVF_00006120_restart.nc ok

AAAAAAAA

